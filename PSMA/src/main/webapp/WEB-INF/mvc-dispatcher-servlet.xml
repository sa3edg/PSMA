<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven/>
	<context:annotation-config/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<context:component-scan base-package="com.benchmark.psma.controller" >
	                        </context:component-scan>
	
    <bean id="internalResourceResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    
    <!-- resource bundle  configuration-->
    <bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:locale/messages" />
		<property name="fallbackToSystemLocale" value="false"/>
		<property name="defaultEncoding" value="UTF-8"/>
	</bean>

     <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
     	<property name="defaultLocale" value="ar" />
     </bean>
     
	<mvc:interceptors>
		<bean
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang" />
		</bean>
		<!-- Configuring interceptors based on URI -->
		 <mvc:interceptor>
        	<mvc:mapping path="/rest/**"/>
    		<bean class="com.benchmark.psma.interceptors.RequestProcessingTimeInterceptor" />
        </mvc:interceptor>
        <mvc:interceptor>
        	<mvc:mapping path="/rest/**"/>
    		<bean class="com.benchmark.psma.interceptors.RestAuthenticationInterceptor" />
        </mvc:interceptor>
        <!-- End of Configuring interceptors based on URI -->
	</mvc:interceptors>
    <!-- end of resource bundle  configuration-->
    
    <!-- Tiles configuration -->
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles/tiles-definitions.xml</value>
			</list>
		</property>
	</bean>

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
	</bean>
	<!-- end of Tiles configuration -->
	
	<!-- Place Holder configuration -->
    <bean id="placeholderConfig"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:config/psma.properties</value>
            </list>
        </property>
    </bean>
    <!-- end of Place Holder configuration -->
    
    <!-- Configure to plugin JSON as request and response in method handler -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonMessageConverter"/>
            </list>
        </property>
    </bean>
     
    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </bean>
    	
    <!-- Multipart Resolver -->
    <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
 
         <!-- setting maximum upload size -->
        <property name="maxUploadSize" value="1000000000" />
 
    </bean>
    <!-- End Multipart Resolver -->
    
</beans>